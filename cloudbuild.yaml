steps:
  # # build and push API
  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["build", "my_app", "-t", "${_REGISTRY_IMAGE_API}:${_VERSION_API}"]

  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["push", "${_REGISTRY_IMAGE_API}:${_VERSION_API}"]

  # # build and push UI
  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["build", "my_gradio", "-t", "${_REGISTRY_IMAGE_UI}:${_VERSION_UI}"]

  # - name: "gcr.io/cloud-builders/docker"
  #   args: ["push", "${_REGISTRY_IMAGE_UI}:${_VERSION_UI}"]
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - '-c'
    - |
      gcloud container clusters get-credentials "$_CLUSTER_NAME" \
        --zone "$_ZONE" --project "$_PROJECT_ID"

      find k8s -type f -name '*.yaml' -print0 \
        | xargs -0 sed -i \
          "s|__PROJECT_NAME__|flight|g" \
          "s|__API__VERSION__|${_REGISTRY_IMAGE_API}:${_VERSION_API}|g" \
          "s|__UI__VERSION__|${_REGISTRY_IMAGE_UI}:${_VERSION_UI}|g"

      kubectl apply -R -f ./k8s/
  # # deploy API to Cloud Run
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     [
  #       "run", "deploy", "${_SERVICE_NAME_API}",
  #       "--image", "${_REGISTRY_IMAGE_API}:${_VERSION_API}",
  #       "--region", "europe-west3",
  #       "--platform", "managed",
  #       "--allow-unauthenticated",
  #       "--port", "8001"
  #     ]

  # # deploy UI to Cloud Run
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     [
  #       "run", "deploy", "${_SERVICE_NAME_UI}",
  #       "--image", "${_REGISTRY_IMAGE_UI}:${_VERSION_UI}",
  #       "--region", "europe-west3",
  #       "--platform", "managed",
  #       "--allow-unauthenticated",
  #       "--port", "8005"
  #     ]

options:
  logging: CLOUD_LOGGING_ONLY

