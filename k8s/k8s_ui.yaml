---
apiVersion: apps/v1 # specifies the API version for the Deployment resource
kind: Deployment # defines the type of Kubernetes resource being created
metadata:
  name: ui-__PROJECT_NAME__ # the name of the deployment to identify this deployment resource
  labels:
    app: ui-__PROJECT_NAME__ # key-value pairs that can be used to organize and select resources
    version: v1
spec: # defines the desired state for the deployment
  replicas: 1 # specifies that 3 replicas (pods) of the application should be running
  selector:
    matchLabels:
      app: ui-__PROJECT_NAME__ # criteria for selecting the pods that this deployment will manage (it selects pods with the label app: web)
  template: # describes the pods that will be created by the deployment
    metadata:
      labels:
        app: ui-__PROJECT_NAME__ # labels assigned to the pods created by this deployment (must match the selector labels)
        version: v1
    spec: # defines the specification for the pod template
      # volumes:
      #   - name: ui-__PROJECT_NAME__
      #     configMap:
      #       name: ui-__PROJECT_NAME__ # specifies the ConfigMap to use for the volume
      containers: # lists the containers that will be running inside the pods
        - name: ui-__PROJECT_NAME__ # the name of the container
          image: __UI__VERSION__ # the Docker image used for this container
          ports:
            - containerPort: 8005 # specifies that port 80 should be exposed on the container
          # volumeMounts:
          #   - name: ui-__PROJECT_NAME__
          #     mountPath: /etc/nginx
          #     readOnly: true  
          resources:
            limits:
              cpu: 0.2
              memory: 512Mi
            requests:
              cpu: 0.1
              memory: 256Mi

---
apiVersion: v1 # specifies the API version for the Service resource
kind: Service
metadata:
  name: ui-__PROJECT_NAME__
spec:
  selector:
    app: ui-__PROJECT_NAME__
  type: LoadBalancer
  ports:
    - name: http
      port: 80 # port for external access to the service
      targetPort: 8005
      # protocol: TCP
      # nodePort: 30850 # The range of valid ports is 30000-32767
